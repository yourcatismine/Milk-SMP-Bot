const { ActivityType, Events, EmbedBuilder } = require("discord.js");

const CHANNEL_ID = '1344986198627713107';
const TIMEZONE = 'Asia/Manila';

const GREETINGS = {
    midnight: {
        hour: 0, // 12:00 AM
        minute: 0,
        titles: [
            'üåô Midnight Hour!',
            '‚ú® Late Night Vibes!',
            'üåÉ Midnight Magic!',
            'ü¶â Night Owl Time!',
            '‚≠ê Starlight Greetings!'
        ],
        messages: [
            'The clock strikes midnight! Perfect time for night owls! ü¶â',
            'Midnight magic is in the air! Hope you\'re having a great night! ‚ú®',
            'Late night energy for all the night shift warriors! üí™',
            'The world is quiet, but we\'re still here! Good midnight! üåô',
            'Midnight snacks and good vibes! Enjoy the peaceful hour! üçø',
            'Stars are shining bright at this midnight hour! üåü',
            'Whether you\'re up late or up early - midnight greetings! üåÉ'
        ],
        color: '#191970' // Midnight Blue
    },
    dawn: {
        hour: 3, // 3:00 AM
        minute: 0,
        titles: [
            'üåÖ Dawn Break!',
            '‚ú® Early Dawn!',
            'üåÑ Pre-Sunrise!',
            'üêì Dawn Patrol!',
            'üå∏ Early Hours!'
        ],
        messages: [
            'The earliest of early birds! Dawn is breaking! üåÖ',
            'Pre-sunrise greetings to all the early risers! üåÑ',
            'Dawn patrol checking in! Hope you\'re well rested! üí§',
            'The world is still sleeping, but you\'re ahead of the game! üéØ',
            'Dawn\'s first light brings new possibilities! üåü',
            'Early morning serenity - enjoy this peaceful time! üïäÔ∏è',
            'Rise with the dawn and conquer the day ahead! üí™'
        ],
        color: '#FF69B4' // Hot Pink
    },
    morning: {
        hour: 6, // 6:00 AM
        minute: 0,
        titles: [
            'üåû Good Morning!',
            '‚òÄÔ∏è Rise and Shine!',
            '‚ú® Morning Sunshine!',
            'üåÑ Fresh New Day!',
            'üåÖ Sunrise Greetings!'
        ],
        messages: [
            'Rise and shine! Hope you have a wonderful day ahead! ‚òÄÔ∏è',
            'Good morning everyone! May your coffee be strong and your day be amazing! ‚òï',
            'The sun is rising! Time to embrace this beautiful morning! üåÖ',
            'A new day brings new opportunities! Make it count! üí™',
            'Morning vibes are the best vibes! Spread some positivity today! ‚ú®',
            'Wake up and be awesome! The world is waiting for your greatness! üåü',
            'Fresh morning air and endless possibilities await! Let\'s go! üöÄ'
        ],
        color: '#FFD700' // Gold
    },
    midMorning: {
        hour: 9, // 9:00 AM
        minute: 0,
        titles: [
            '‚òÄÔ∏è Mid-Morning!',
            'üåû Morning Peak!',
            '‚ú® 9 AM Energy!',
            'üöÄ Morning Momentum!',
            'üíº Work Mode On!'
        ],
        messages: [
            'Mid-morning momentum is here! Hope your day is off to a great start! üöÄ',
            '9 AM energy boost! Time to tackle those goals! üíº',
            'The morning is in full swing! You\'ve got this! üí™',
            'Coffee should be kicking in about now! Stay productive! ‚òï',
            'Mid-morning check-in: How\'s your day going so far? üìà',
            'Morning peak hours! Perfect time to get things done! ‚ö°',
            'The day is young and full of potential! Keep going! üåü'
        ],
        color: '#FFA500' // Orange
    },
    noon: {
        hour: 12, // 12:00 PM
        minute: 0,
        titles: [
            '‚òÄÔ∏è High Noon!',
            'üåû Midday Greetings!',
            '‚è∞ Lunch Time!',
            'üåÖ Noon Peak!',
            '‚ú® Midday Magic!'
        ],
        messages: [
            'High noon! The sun is at its peak and so are you! ‚òÄÔ∏è',
            'Lunch time greetings! Hope you\'re having a productive day! üçΩÔ∏è',
            'Midday energy is here! Time to refuel and recharge! ‚ö°',
            'Noon check-in: You\'re halfway through an amazing day! üìä',
            'The sun is directly overhead - perfect timing for a break! üåû',
            'Midday motivation coming your way! Keep being awesome! üéØ',
            'Lunch break thoughts: You\'re doing great today! ü•™'
        ],
        color: '#FF8C00' // Dark Orange
    },
    afternoon: {
        hour: 15, // 3:00 PM
        minute: 0,
        titles: [
            'üå§Ô∏è Good Afternoon!',
            '‚òÄÔ∏è Afternoon Vibes!',
            '‚ö° 3 PM Energy!',
            'üåª Afternoon Sunshine!',
            'üí™ Afternoon Power!'
        ],
        messages: [
            'Good afternoon! Hope your day continues to shine bright! üå§Ô∏è',
            'Afternoon energy boost incoming! You\'re doing amazing! ‚ö°',
            '3 PM productivity time! Keep up the excellent work! üíº',
            'Afternoon sunshine for your soul! Stay positive! üåª',
            'The day is progressing beautifully! You\'ve got this! üí™',
            'Afternoon check-in: Still crushing it! Keep going! üìà',
            'Mid-afternoon motivation to carry you through! üöÄ'
        ],
        color: '#FF6347' // Tomato
    },
    evening: {
        hour: 18, // 6:00 PM
        minute: 0,
        titles: [
            'üåÜ Good Evening!',
            'üåô Evening Greetings!',
            'üåÉ Sunset Time!',
            '‚ú® Evening Vibes!',
            'üåá Golden Hour!'
        ],
        messages: [
            'Good evening! The golden hour has arrived! üåá',
            'Evening greetings! Time to wind down and relax! üåô',
            'Sunset vibes are here! Hope your day was wonderful! üåÖ',
            'Evening check-in: You made it through another great day! üéâ',
            'The day is transitioning to night - enjoy this peaceful time! üåÉ',
            'Golden hour magic! Take a moment to appreciate today! ‚ú®',
            'Evening has arrived! Time for reflection and relaxation! üõãÔ∏è'
        ],
        color: '#9370DB' // Medium Purple
    },
    night: {
        hour: 21, // 9:00 PM
        minute: 0,
        titles: [
            'üåô Good Night!',
            '‚≠ê Evening Stars!',
            'üåÉ Night Time!',
            '‚ú® Starlight Hour!',
            'ü¶â Night Owl Time!'
        ],
        messages: [
            'Good night! The stars are starting to twinkle! ‚≠ê',
            'Night time greetings! Hope you can unwind and relax! üåô',
            '9 PM vibes! Perfect time to slow down and enjoy the evening! üåÉ',
            'Night owl time begins! Whether winding down or staying up! ü¶â',
            'The day is ending beautifully! Time for some peace and quiet! ‚ú®',
            'Starlight hour! Take a moment to appreciate how far you\'ve come! üåü',
            'Night time reflection: You did great today! Rest well! üí§'
        ],
        color: '#4B0082' // Indigo
    }
};

const sentToday = new Set();

module.exports = {
  name: Events.ClientReady,
  once: true,
  execute(client) {
    console.log(`EnderSMP`);

    // Bot Status System
    const statuses = [
      { name: "Milk Survival", type: ActivityType.Playing },
      { name: "Pure Crossplay Survival Server!", type: ActivityType.Listening },
      { name: "Filipino!", type: ActivityType.Competing },
      { name: "Season 3 Released!", type: ActivityType.Playing },
    ];

    function updateStatus() {
      const random = statuses[Math.floor(Math.random() * statuses.length)];

      client.user.setPresence({
        activities: [{ name: random.name, type: random.type }],
        status: "dnd",
      });

      const nextUpdate = Math.floor(Math.random() * 10000) + 10000;
      setTimeout(updateStatus, nextUpdate);
    }

    updateStatus();

    console.log('üìÖ Time Greetings System Started!');
    
    setInterval(async () => {
        await checkAndSendGreetings(client);
    }, 60000);
    
    setTimeout(() => checkAndSendGreetings(client), 5000);
  },
};

async function checkAndSendGreetings(client) {
    try {
        const now = new Date();
        const manilaTime = new Date(now.toLocaleString("en-US", { timeZone: TIMEZONE }));
        
        const currentHour = manilaTime.getHours();
        const currentMinute = manilaTime.getMinutes();
        const dateKey = manilaTime.toDateString();
        
        if (currentHour === 0 && currentMinute === 0) {
            sentToday.clear();
            console.log('üîÑ Daily greeting tracker reset');
        }
        
        for (const [greetingType, config] of Object.entries(GREETINGS)) {
            const greetingKey = `${dateKey}-${greetingType}`;
            
            if (currentHour === config.hour && 
                currentMinute === config.minute && 
                !sentToday.has(greetingKey)) {
                
                await sendGreeting(client, config, greetingType);
                sentToday.add(greetingKey);
                
                console.log(`‚úÖ Sent ${greetingType} greeting at ${currentHour}:${currentMinute.toString().padStart(2, '0')} Manila Time`);
            }
        }
        
    } catch (error) {
        console.error('‚ùå Error in time greetings system:', error);
    }
}

async function sendGreeting(client, config, greetingType) {
    try {
        const channel = client.channels.cache.get(CHANNEL_ID);
        
        if (!channel) {
            console.error(`‚ùå Channel with ID ${CHANNEL_ID} not found!`);
            return;
        }
        
        // Create a specific time object for the scheduled greeting time
        const now = new Date();
        
        // Get Manila time properly for date calculation
        const manilaTimeString = now.toLocaleString("en-US", { timeZone: TIMEZONE });
        const manilaTime = new Date(manilaTimeString);
        
        // Create greeting time string directly from config values
        const hour12 = config.hour > 12 ? config.hour - 12 : (config.hour === 0 ? 12 : config.hour);
        const ampm = config.hour >= 12 ? 'PM' : 'AM';
        const timeString = `${hour12.toString().padStart(2, '0')}:${config.minute.toString().padStart(2, '0')} ${ampm}`;
        
        // Get the correct date in Manila timezone
        const dateString = new Intl.DateTimeFormat('en-US', {
            weekday: 'long',
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            timeZone: TIMEZONE
        }).format(now);
        
        // Select random title and message
        const randomTitle = config.titles[Math.floor(Math.random() * config.titles.length)];
        const randomMessage = config.messages[Math.floor(Math.random() * config.messages.length)];
        
        const embed = new EmbedBuilder()
            .setTitle(randomTitle)
            .setDescription(randomMessage)
            .setColor(config.color)
            .addFields(
                {
                    name: 'üìç Location',
                    value: '`Philippines (Manila)`',
                    inline: true
                },
                {
                    name: 'üïê Greeting Time',
                    value: `\`${timeString}\``,
                    inline: true
                },
                {
                    name: 'üìÖ Date',
                    value: `\`${dateString}\``,
                    inline: false
                }
            )
            .setFooter({ 
                text: `Auto-sent ‚Ä¢ Manila Time`,
                iconURL: client.user.displayAvatarURL()
            })
            .setTimestamp();
        
        if (greetingType === 'midnight') {
            const midnightVibes = [
                'Night shift warriors, this one\'s for you! üåô',
                'Embrace the quiet magic of midnight! ‚ú®',
                'The world sleeps, but legends stay awake! ü¶â',
                'Midnight fuel: snacks and good company! üçø',
                'Stars witness the dedication of night owls! ‚≠ê'
            ];
            embed.addFields({
                name: 'üåô Midnight Vibes',
                value: midnightVibes[Math.floor(Math.random() * midnightVibes.length)],
                inline: false
            });
        } else if (greetingType === 'dawn') {
            const dawnMotivation = [
                'You\'re ahead of 99% of the world right now! üåÖ',
                'Dawn brings the promise of endless possibilities! ‚ú®',
                'Early risers are the architects of success! üèóÔ∏è',
                'The silence of dawn is perfect for planning greatness! ü§´',
                'Sunrise warriors deserve extra recognition! üèÜ'
            ];
            embed.addFields({
                name: 'üåÖ Dawn Motivation',
                value: dawnMotivation[Math.floor(Math.random() * dawnMotivation.length)],
                inline: false
            });
        } else if (greetingType === 'morning') {
            const morningTips = [
                'Start your day with a smile and positive thoughts! üòä',
                'A good morning routine sets the tone for success! üåü',
                'Hydrate and stretch - your body will thank you! üíß',
                'Take a deep breath and embrace the new day! üå¨Ô∏è',
                'Remember: Every morning is a fresh start! üîÑ'
            ];
            embed.addFields({
                name: 'üí° Morning Tip',
                value: morningTips[Math.floor(Math.random() * morningTips.length)],
                inline: false
            });
        } else if (greetingType === 'midMorning') {
            const midMorningBoost = [
                'The morning momentum is building! Keep it up! üöÄ',
                'Coffee + motivation = unstoppable combination! ‚òï',
                'Mid-morning is prime productivity time! ‚ö°',
                'You\'re in the flow state - don\'t stop now! üåä',
                'Morning goals are getting crushed! Well done! üéØ'
            ];
            embed.addFields({
                name: 'üöÄ Mid-Morning Boost',
                value: midMorningBoost[Math.floor(Math.random() * midMorningBoost.length)],
                inline: false
            });
        } else if (greetingType === 'noon') {
            const noonEnergy = [
                'Lunch break = brain break! Recharge those batteries! üîã',
                'Midday sun provides vitamin D and good vibes! ‚òÄÔ∏è',
                'Half the day conquered, half the adventure remains! ‚öñÔ∏è',
                'Noon check: You\'re doing better than you think! üìä',
                'Fuel up for the afternoon ahead! ü•ô'
            ];
            embed.addFields({
                name: '‚ö° Noon Energy',
                value: noonEnergy[Math.floor(Math.random() * noonEnergy.length)],
                inline: false
            });
        } else if (greetingType === 'afternoon') {
            const afternoonBoosts = [
                'Keep up the great work! You\'re doing amazing! üí™',
                'Afternoon slump? Not today! You\'ve got this! üí•',
                'Stay focused - you\'re closer to your goals! üéØ',
                'A little afternoon motivation never hurt anyone! ‚ö°',
                'Power through! The finish line is in sight! üèÅ'
            ];
            embed.addFields({
                name: '‚ö° Afternoon Boost',
                value: afternoonBoosts[Math.floor(Math.random() * afternoonBoosts.length)],
                inline: false
            });
        } else if (greetingType === 'evening') {
            const eveningReflections = [
                'Take a moment to appreciate what you accomplished today! ‚ú®',
                'Reflect on the good moments from your day! üå∏',
                'You survived another day - that\'s worth celebrating! üéä',
                'Time to relax and prepare for tomorrow\'s adventures! üõ§Ô∏è',
                'Count your blessings, not your problems! üôè'
            ];
            embed.addFields({
                name: 'üåü Evening Reflection',
                value: eveningReflections[Math.floor(Math.random() * eveningReflections.length)],
                inline: false
            });
        } else if (greetingType === 'night') {
            const nightThoughts = [
                'Night time is perfect for reflection and gratitude! üôè',
                'Let the day\'s stress melt away with the darkness! üåô',
                'Whether winding down or staying up - you\'re awesome! üåü',
                'Night brings peace and the promise of tomorrow! ‚ú®',
                'Rest well, dream big, wake up ready! üí§'
            ];
            embed.addFields({
                name: 'üåô Night Thoughts',
                value: nightThoughts[Math.floor(Math.random() * nightThoughts.length)],
                inline: false
            });
        }
        
        await channel.send({ embeds: [embed] }); //Removed @everyone mention for a more relaxed approach
        
    } catch (error) {
        console.error(`‚ùå Error sending ${greetingType} greeting:`, error);
    }
}